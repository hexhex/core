cabinetTOthing(X,Y) : cabinet(X) :- thing(Y).
roomTOcabinet(X,Y) : room(X) :- cabinet(Y).
personTOroom(P,R) :- personTOthing(P,X), cabinetTOthing(C,X), roomTOcabinet(R,C).

%input(room, X, X) :- room(X).
%input(cabinet, X, X) :- cabinet(X).
%input(thing, X, X) :- thing(X).
%input(person, X, X) :- person(X).
input(cabinetTOthing, X, Y) :- cabinetTOthing(X, Y).
input(roomTOcabinet, X, Y) :- roomTOcabinet(X, Y).
input(personTOroom, X, Y) :- personTOroom(X, Y).

input(inequPerson, P1, P2) :- personTOroom(P1, R), personTOroom(P2, R), P1 < P2.
input(ineqThing, Y1, Y2) :- cabinetTOthing(C, Y1), cabinetTOthing(C, Y2), Y1 < Y2.
input(ineqCabinet, Y1, Y2) :- roomTOcabinet(R, Y1), roomTOcabinet(R, Y2), Y1 < Y2.

input(i, i, i) :- &testCautiousQuery["houseCheck.hex", input, violated]().
:- input(i, i, i).
